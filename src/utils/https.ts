import axios, { type AxiosInstance, type InternalAxiosRequestConfig, type AxiosResponse } from 'axios'
import baseUrl from '../config/index'

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä axios —Å –±–∞–∑–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
const http: AxiosInstance = axios.create({
  baseURL: baseUrl.baseURL,
  timeout: 10000, // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
  headers: {
    'Content-Type': 'application/json',
    'x-api-key': 'sk_Y2x8vAhgGKmU4rpqWdQ9TbLxZz1OcRDNtUasEHJZr4uoPaPk',
  },
})

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
http.interceptors.request.use(
  (config: InternalAxiosRequestConfig) => {
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ API –∫–ª—é—á –≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    config.headers['api-key'] = 'sk_Y2x8vAhgGKmU4rpqWdQ9TbLxZz1OcRDNtUasEHJZr4uoPaPk'
    
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', config.method?.toUpperCase(), config.url)
    console.log('üîë –° API –∫–ª—é—á–æ–º:', config.headers['api-key'] ? '–î–∞' : '–ù–µ—Ç')
    return config
  },
  (error: any) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ:', error)
    return Promise.reject(error)
  }
)

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤
http.interceptors.response.use(
  (response: AxiosResponse) => {
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response.status, response.config.url)
    return response
  },
  (error: any) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ:', error.response?.status, error.response?.data || error.message)
    return Promise.reject(error)
  }
)

export default http
